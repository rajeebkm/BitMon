/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BTCEscrowDst,
  BTCEscrowDstInterface,
} from "../../../monadvm/contracts/BTCEscrowDst";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "rescueDelay",
        type: "uint32",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidImmutables",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecret",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTime",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenSendingFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "btcAddress",
        type: "string",
      },
    ],
    name: "BitcoinAddressRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "btcTxHash",
        type: "string",
      },
    ],
    name: "BitcoinTxHashRecorded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EscrowCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "EscrowWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsRescued",
    type: "event",
  },
  {
    inputs: [],
    name: "FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROXY_BYTECODE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESCUE_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "bitcoinAddresses",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "bitcoinTxHashes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
    ],
    name: "getBitcoinAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
    ],
    name: "getBitcoinTxHash",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "publicWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "btcAddress",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "recordBitcoinAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "btcTxHash",
        type: "string",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "recordBitcoinTx",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x3360c0527f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000006101209081526001600160601b03193060601b16610134526e5af43d82803e903d91602b57fd5bf360881b610148526037610100819052610157604052902060e05234801561007257600080fd5b50604051611210380380611210833981016040819052610091916100ad565b63ffffffff90911660a0526001600160a01b03166080526100fc565b600080604083850312156100c057600080fd5b825163ffffffff811681146100d457600080fd5b60208401519092506001600160a01b03811681146100f157600080fd5b809150509250929050565b60805160a05160c05160e0516110c661014a600039600081816101a8015261098601526000818161015c01526109a701526000818161028a01526105f90152600061030101526110c66000f3fe6080604052600436106100c65760003560e01c806350317ab81161007f578063e823e09c11610059578063e823e09c14610258578063f56cd69c14610278578063f6a4e9a8146102ac578063f76f6aef146102cc57600080fd5b806350317ab8146101f857806390d3252f14610218578063d8715b551461023857600080fd5b80630af97558146100d25780631294dfc6146100f4578063233057031461012a5780632dd310001461014a57806334862b6a146101965780634649088b146101d857600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100f26100ed366004610cde565b6102ec565b005b34801561010057600080fd5b5061011461010f366004610d0c565b61043e565b6040516101219190610d49565b60405180910390f35b34801561013657600080fd5b506100f2610145366004610cde565b6104d8565b34801561015657600080fd5b5061017e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610121565b3480156101a257600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610121565b3480156101e457600080fd5b506100f26101f3366004610d7c565b6105b7565b34801561020457600080fd5b50610114610213366004610d0c565b61068f565b34801561022457600080fd5b506100f2610233366004610dc8565b6106a8565b34801561024457600080fd5b50610114610253366004610d0c565b610768565b34801561026457600080fd5b506100f2610273366004610dec565b61080a565b34801561028457600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b857600080fd5b506101146102c7366004610d0c565b6108b7565b3480156102d857600080fd5b506100f26102e7366004610dec565b6108d4565b6040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103749190610e7b565b600003610394576040516348f5c3ed60e01b815260040160405180910390fd5b8061039e81610972565b828280602001356103ae836109f6565b146103cc5760405163abab6bd760e01b815260040160405180910390fd5b6103db60e08501356001610a6d565b804210156103fc576040516337bf561360e11b815260040160405180910390fd5b61040b60e08601356002610a6d565b80421061042b576040516337bf561360e11b815260040160405180910390fd5b6104358787610aaf565b50505050505050565b6000602081905290815260409020805461045790610e94565b80601f016020809104026020016040519081016040528092919081815260200182805461048390610e94565b80156104d05780601f106104a5576101008083540402835291602001916104d0565b820191906000526020600020905b8154815290600101906020018083116104b357829003601f168201915b505050505081565b806104e281610972565b828280602001356104f2836109f6565b146105105760405163abab6bd760e01b815260040160405180910390fd5b61051f60e08501356000610a6d565b80421015610540576040516337bf561360e11b815260040160405180910390fd5b61054f60e08601356002610a6d565b80421061056f576040516337bf561360e11b815260040160405180910390fd5b336001600160a01b03604088013516148015906105995750336001600160a01b0360608801351614155b1561042b576040516348f5c3ed60e01b815260040160405180910390fd5b80336001600160a01b03606083013516146105e5576040516348f5c3ed60e01b815260040160405180910390fd5b816105ef81610972565b60e083810135901c7f0000000000000000000000000000000000000000000000000000000000000000018042101561063a576040516337bf561360e11b815260040160405180910390fd5b610645863387610b0f565b604080516001600160a01b0388168152602081018790527fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac910160405180910390a1505050505050565b6001602052600090815260409020805461045790610e94565b80336001600160a01b03606083013516146106d6576040516348f5c3ed60e01b815260040160405180910390fd5b816106e081610972565b6106ef60e08401356002610a6d565b80421015610710576040516337bf561360e11b815260040160405180910390fd5b610727608085013560608601358660a00135610b0f565b61073960608501358560c00135610b40565b6040517f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a990600090a150505050565b600081815260208190526040902080546060919061078590610e94565b80601f01602080910402602001604051908101604052809291908181526020018280546107b190610e94565b80156107fe5780601f106107d3576101008083540402835291602001916107fe565b820191906000526020600020905b8154815290600101906020018083116107e157829003601f168201915b50505050509050919050565b8061081481610972565b336001600160a01b036040840135161480159061083e5750336001600160a01b0360608401351614155b1561085c576040516348f5c3ed60e01b815260040160405180910390fd5b6000858152602081905260409020610875848683610f2e565b50847f0df1e995c80dc6fe1ba1c5a3c839cb629629e8e1648aa9d145eb75057a70778285856040516108a8929190610fef565b60405180910390a25050505050565b600081815260016020526040902080546060919061078590610e94565b806108de81610972565b336001600160a01b03604084013516148015906109085750336001600160a01b0360608401351614155b15610926576040516348f5c3ed60e01b815260040160405180910390fd5b600085815260016020526040902061093f848683610f2e565b50847fbae433f142e4103c20d99dcb939b0dd6783fe12b0fef8b6ab81ef3f1f0bb68b785856040516108a8929190610fef565b600061097d82610bb4565b9050306109cb827f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610bca565b6001600160a01b0316146109f257604051635134a42560e11b815260040160405180910390fd5b5050565b6000600282604051602001610a0d91815260200190565b60408051601f1981840301815290829052610a279161101e565b602060405180830381855afa158015610a44573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a679190610e7b565b92915050565b60008281836002811115610a8357610a8361103a565b610a8e906020611066565b9050610aa663ffffffff83831c1660e084901c61107d565b95945050505050565b610ac6608082013560408301358360a00135610b0f565b610ad860608201358260c00135610b40565b6040518281527fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171059060200160405180910390a15050565b6001600160a01b038316610b2c57610b278282610b40565b505050565b610b276001600160a01b0384168383610bfd565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b8d576040519150601f19603f3d011682016040523d82523d6000602084013e610b92565b606091505b5050905080610b2757604051638a0332d560e01b815260040160405180910390fd5b6000604051610100838237610100902092915050565b6000604051836040820152846020820152828152600b8101905060ff8153605590206001600160a01b0316949350505050565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b1781528251610b27938793909260009283929183919082885af180610c6d576040513d6000823e3d81fd5b50506000513d91508115610c85578060011415610c92565b6001600160a01b0384163b155b15610cbf57604051635274afe760e01b81526001600160a01b038516600482015260240160405180910390fd5b50505050565b60006101008284031215610cd857600080fd5b50919050565b6000806101208385031215610cf257600080fd5b82359150610d038460208501610cc5565b90509250929050565b600060208284031215610d1e57600080fd5b5035919050565b60005b83811015610d40578181015183820152602001610d28565b50506000910152565b6020815260008251806020840152610d68816040850160208701610d25565b601f01601f19169190910160400192915050565b60008060006101408486031215610d9257600080fd5b83356001600160a01b0381168114610da957600080fd5b925060208401359150610dbf8560408601610cc5565b90509250925092565b60006101008284031215610ddb57600080fd5b610de58383610cc5565b9392505050565b6000806000806101408587031215610e0357600080fd5b84359350602085013567ffffffffffffffff80821115610e2257600080fd5b818701915087601f830112610e3657600080fd5b813581811115610e4557600080fd5b886020828501011115610e5757600080fd5b602083019550809450505050610e708660408701610cc5565b905092959194509250565b600060208284031215610e8d57600080fd5b5051919050565b600181811c90821680610ea857607f821691505b602082108103610cd857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115610b27576000816000526020600020601f850160051c81016020861015610f075750805b601f850160051c820191505b81811015610f2657828155600101610f13565b505050505050565b67ffffffffffffffff831115610f4657610f46610ec8565b610f5a83610f548354610e94565b83610ede565b6000601f841160018114610f8e5760008515610f765750838201355b600019600387901b1c1916600186901b178355610fe8565b600083815260209020601f19861690835b82811015610fbf5786850135825560209485019460019092019101610f9f565b5086821015610fdc5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008251611030818460208701610d25565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610a6757610a67611050565b80820180821115610a6757610a6761105056fea264697066735822122084b05aaae69d49e54f020cb17b24c9d86bf796c7e3a02ac6cac8a0419c3a2f0664736f6c63430008170033";

type BTCEscrowDstConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BTCEscrowDstConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BTCEscrowDst__factory extends ContractFactory {
  constructor(...args: BTCEscrowDstConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      rescueDelay,
      accessToken,
      overrides || {}
    );
  }
  override deploy(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rescueDelay, accessToken, overrides || {}) as Promise<
      BTCEscrowDst & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BTCEscrowDst__factory {
    return super.connect(runner) as BTCEscrowDst__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BTCEscrowDstInterface {
    return new Interface(_abi) as BTCEscrowDstInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BTCEscrowDst {
    return new Contract(address, _abi, runner) as unknown as BTCEscrowDst;
  }
}
