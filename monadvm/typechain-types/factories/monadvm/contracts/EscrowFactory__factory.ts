/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EscrowFactory,
  EscrowFactoryInterface,
} from "../../../monadvm/contracts/EscrowFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "rescueDelayDst",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_creationFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Create2EmptyBytecode",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientEscrowBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidCreationTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFeeAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidPartialFill",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecretsAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "CreationFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "Address",
        name: "taker",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "creatorType",
        type: "uint8",
      },
    ],
    name: "DstEscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldTreasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ESCROW_DST_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowDst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "dstImmutables",
        type: "tuple",
      },
    ],
    name: "createDstEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "creationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getProxyDstBytecodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setCreationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001a4a38038062001a4a8339810160408190526200003491620001f3565b836001600160a01b0381166200006457604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006f816200017c565b506001600160a01b0385811660c0526001839055600280546001600160a01b03191691831691909117905560405183908690620000ac90620001cc565b63ffffffff90921682526001600160a01b03166020820152604001604051809103906000f080158015620000e4573d6000803e3d6000fd5b506001600160a01b031660808190526200016d90604080517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000060208083019190915260609390931b6001600160601b03191660348201526e5af43d82803e903d91602b57fd5bf360881b6048820152815160378183030181526057909101909152805191012090565b60a052506200026f9350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610b628062000ee883390190565b6001600160a01b0381168114620001f057600080fd5b50565b600080600080600060a086880312156200020c57600080fd5b85516200021981620001da565b60208701519095506200022c81620001da565b604087015190945063ffffffff811681146200024757600080fd5b6060870151608088015191945092506200026181620001da565b809150509295509295909350565b60805160a05160c051610c35620002b36000396000818160e401526108a70152600081816101ba015261064901526000818161021a01526103680152610c356000f3fe6080604052600436106100c65760003560e01c80639a46a2251161007f578063be58e91c11610059578063be58e91c1461023c578063dce0b4e41461025c578063f0f4426014610272578063f2fde38b1461029257600080fd5b80639a46a225146101ab578063b7d86225146101e8578063ba5511771461020857600080fd5b80633eb5002a146100d25780634579d04b14610123578063551512de1461013857806361d027b314610158578063715018a6146101785780638da5cb5b1461018d57600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506101067f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610136610131366004610a82565b6102b2565b005b34801561014457600080fd5b50610136610153366004610ab7565b61050c565b34801561016457600080fd5b50600254610106906001600160a01b031681565b34801561018457600080fd5b506101366105b5565b34801561019957600080fd5b506000546001600160a01b0316610106565b3480156101b757600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405190815260200161011a565b3480156101f457600080fd5b50610136610203366004610af3565b6105c9565b34801561021457600080fd5b506101067f000000000000000000000000000000000000000000000000000000000000000081565b34801561024857600080fd5b50610106610257366004610a82565b610617565b34801561026857600080fd5b506101da60015481565b34801561027e57600080fd5b5061013661028d366004610b0c565b610676565b34801561029e57600080fd5b506101366102ad366004610b0c565b6106d8565b608081013560006001600160a01b038216156102d2578260c001356102e4565b6102e460c084013560a0850135610b27565b90506000600154826102f69190610b27565b9050803414610318576040516334f5151d60e01b815260040160405180910390fd5b600061032936869003860186610b48565b60e081015190915061033b904261071b565b60e0820152610100812060408051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b60208201527f000000000000000000000000000000000000000000000000000000000000000060601b6bffffffffffffffffffffffff191660348201526e5af43d82803e903d91602b57fd5bf360881b604882015281516037818303018152605790910190915260006103d5868484610732565b90506001600160a01b038716156103ff576103ff6001600160a01b038816338360a08c01356107d0565b600060015411801561041b57506002546001600160a01b031615155b15610498576002546001546040516000926001600160a01b031691908381818185875af1925050503d806000811461046f576040519150601f19603f3d011682016040523d82523d6000602084013e610474565b606091505b505090508061049657604051634033e4e360e01b815260040160405180910390fd5b505b60006104a4338a610837565b604080516001600160a01b038516815260208c810135908201526060808d01358284015260ff841690820152905191925033917f530d4b707610e0ade6ce45860d8012251fc38e78c1ec43cd4def820ffaec8ac89181900360800190a2505050505050505050565b610514610930565b6001600160a01b03831661059c576000816001600160a01b03168360405160006040518083038185875af1925050503d806000811461056f576040519150601f19603f3d011682016040523d82523d6000602084013e610574565b606091505b505090508061059657604051634033e4e360e01b815260040160405180910390fd5b50505050565b6105b06001600160a01b038416828461095d565b505050565b6105bd610930565b6105c7600061098e565b565b6105d1610930565b600180549082905560408051828152602081018490527f5de302eeb1c80d4fb0c0953b692353f09ddf431411b8eb2034d5e8576956191291015b60405180910390a15050565b60008061062936849003840184610b48565b905061063960e08401354261071b565b60e0820152610100812061066e817f0000000000000000000000000000000000000000000000000000000000000000306109de565b949350505050565b61067e610930565b600280546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a910161060b565b6106e0610930565b6001600160a01b03811661070f57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b6107188161098e565b50565b6001600160e01b03821660e082901b175b92915050565b60008347101561075e5760405163cf47918160e01b815247600482015260248101859052604401610706565b815160000361078057604051631328927760e21b815260040160405180910390fd5b8282516020840186f590503d1519811516156107a2576040513d6000823e3d81fd5b6001600160a01b0381166107c95760405163b06ebf3d60e01b815260040160405180910390fd5b9392505050565b6040516001600160a01b0384811660248301528381166044830152606482018390526105969186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050610a11565b6000604082013560608301356001600160a01b03808316908616036108615760019250505061072c565b806001600160a01b0316856001600160a01b0316036108855760029250505061072c565b6040516370a0823160e01b81526001600160a01b0386811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa1580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190610be6565b11156109255760009250505061072c565b506003949350505050565b6000546001600160a01b031633146105c75760405163118cdaa760e01b8152336004820152602401610706565b6040516001600160a01b038381166024830152604482018390526105b091859182169063a9059cbb90606401610805565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000604051836040820152846020820152828152600b8101905060ff8153605590206001600160a01b0316949350505050565b600080602060008451602086016000885af180610a34576040513d6000823e3d81fd5b50506000513d91508115610a4c578060011415610a59565b6001600160a01b0384163b155b1561059657604051635274afe760e01b81526001600160a01b0385166004820152602401610706565b60006101008284031215610a9557600080fd5b50919050565b80356001600160a01b0381168114610ab257600080fd5b919050565b600080600060608486031215610acc57600080fd5b610ad584610a9b565b925060208401359150610aea60408501610a9b565b90509250925092565b600060208284031215610b0557600080fd5b5035919050565b600060208284031215610b1e57600080fd5b6107c982610a9b565b8082018082111561072c57634e487b7160e01b600052601160045260246000fd5b6000610100808385031215610b5c57600080fd5b6040519081019067ffffffffffffffff82118183101715610b8d57634e487b7160e01b600052604160045260246000fd5b81604052833581526020840135602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e0820152809250505092915050565b600060208284031215610bf857600080fd5b505191905056fea2646970667358221220db54eff62a6fcdec89f2d1da8f267f1d6ed047b9df2348a075eeadcbb292593264736f6c634300081700333360c0527f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000006101209081526001600160601b03193060601b16610134526e5af43d82803e903d91602b57fd5bf360881b610148526037610100819052610157604052902060e05234801561007257600080fd5b50604051610b62380380610b62833981016040819052610091916100ad565b63ffffffff90911660a0526001600160a01b03166080526100fc565b600080604083850312156100c057600080fd5b825163ffffffff811681146100d457600080fd5b60208401519092506001600160a01b03811681146100f157600080fd5b809150509250929050565b60805160a05160c05160e051610a196101496000396000818161012501526105fd01526000818160d4015261061e0152600081816101a701526103c0015260006101de0152610a196000f3fe6080604052600436106100745760003560e01c806334862b6a1161004e57806334862b6a146101135780634649088b1461015557806390d3252f14610175578063f56cd69c1461019557600080fd5b80630af975581461008057806323305703146100a25780632dd31000146100c257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b3660046108a7565b6101c9565b005b3480156100ae57600080fd5b506100a06100bd3660046108a7565b6102e0565b3480156100ce57600080fd5b506100f67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011f57600080fd5b506101477f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161010a565b34801561016157600080fd5b506100a06101703660046108d5565b61037e565b34801561018157600080fd5b506100a0610190366004610921565b610456565b3480156101a157600080fd5b506101477f000000000000000000000000000000000000000000000000000000000000000081565b6040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561022d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102519190610945565b600003610271576040516348f5c3ed60e01b815260040160405180910390fd5b61028060e08201356001610513565b804210156102a1576040516337bf561360e11b815260040160405180910390fd5b6102b060e08301356002610513565b8042106102d0576040516337bf561360e11b815260040160405180910390fd5b6102da8484610557565b50505050565b80336001600160a01b036060830135161461030e576040516348f5c3ed60e01b815260040160405180910390fd5b61031d60e08301356000610513565b8042101561033e576040516337bf561360e11b815260040160405180910390fd5b61034d60e08401356002610513565b80421061036d576040516337bf561360e11b815260040160405180910390fd5b6103778585610557565b5050505050565b80336001600160a01b03606083013516146103ac576040516348f5c3ed60e01b815260040160405180910390fd5b816103b6816105e9565b60e083810135901c7f00000000000000000000000000000000000000000000000000000000000000000180421015610401576040516337bf561360e11b815260040160405180910390fd5b61040c86338761066d565b604080516001600160a01b0388168152602081018790527fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac910160405180910390a1505050505050565b80336001600160a01b0360608301351614610484576040516348f5c3ed60e01b815260040160405180910390fd5b8161048e816105e9565b61049d60e08401356002610513565b804210156104be576040516337bf561360e11b815260040160405180910390fd5b6104d6608085013560608601355b8660a0013561066d565b6104e4338560c0013561069e565b6040517f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a990600090a150505050565b600082818360028111156105295761052961095e565b61053490602061098a565b905061054c63ffffffff83831c1660e084901c6109a1565b925050505b92915050565b80610561816105e9565b8282806020013561057183610712565b1461058f5760405163abab6bd760e01b815260040160405180910390fd5b6105a1608085013560408601356104cc565b6105af338560c0013561069e565b6040518581527fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171059060200160405180910390a15050505050565b60006105f482610783565b905030610642827f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610799565b6001600160a01b03161461066957604051635134a42560e11b815260040160405180910390fd5b5050565b6001600160a01b03831661068a57610685828261069e565b505050565b6106856001600160a01b03841683836107cc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146106eb576040519150601f19603f3d011682016040523d82523d6000602084013e6106f0565b606091505b505090508061068557604051638a0332d560e01b815260040160405180910390fd5b600060028260405160200161072991815260200190565b60408051601f1981840301815290829052610743916109b4565b602060405180830381855afa158015610760573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105519190610945565b6000604051610100838237610100902092915050565b6000604051836040820152846020820152828152600b8101905060ff8153605590206001600160a01b0316949350505050565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b1781528251610685938793909260009283929183919082885af18061083c576040513d6000823e3d81fd5b50506000513d91508115610854578060011415610861565b6001600160a01b0384163b155b156102da57604051635274afe760e01b81526001600160a01b038516600482015260240160405180910390fd5b600061010082840312156108a157600080fd5b50919050565b60008061012083850312156108bb57600080fd5b823591506108cc846020850161088e565b90509250929050565b600080600061014084860312156108eb57600080fd5b83356001600160a01b038116811461090257600080fd5b925060208401359150610918856040860161088e565b90509250925092565b6000610100828403121561093457600080fd5b61093e838361088e565b9392505050565b60006020828403121561095757600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761055157610551610974565b8082018082111561055157610551610974565b6000825160005b818110156109d557602081860181015185830152016109bb565b50600092019182525091905056fea264697066735822122019f6b00e4829a3d2d1eb6d295c8ac856d4ca7d01e6ca4eb2e108107a2fd55cd564736f6c63430008170033";

type EscrowFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowFactory__factory extends ContractFactory {
  constructor(...args: EscrowFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelayDst: BigNumberish,
    _creationFee: BigNumberish,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      accessToken,
      owner,
      rescueDelayDst,
      _creationFee,
      _treasury,
      overrides || {}
    );
  }
  override deploy(
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelayDst: BigNumberish,
    _creationFee: BigNumberish,
    _treasury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      accessToken,
      owner,
      rescueDelayDst,
      _creationFee,
      _treasury,
      overrides || {}
    ) as Promise<
      EscrowFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowFactory__factory {
    return super.connect(runner) as EscrowFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowFactoryInterface {
    return new Interface(_abi) as EscrowFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EscrowFactory {
    return new Contract(address, _abi, runner) as unknown as EscrowFactory;
  }
}
