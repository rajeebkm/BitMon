/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  BTCEscrowFactory,
  BTCEscrowFactoryInterface,
} from "../../../monadvm/contracts/BTCEscrowFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "rescueDelaySrc",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "rescueDelayDst",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_creationFee",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_treasury",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "minConfirmations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dustThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
        ],
        internalType: "struct BTCEscrowFactory.BitcoinConfig",
        name: "_bitcoinConfig",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "Create2EmptyBytecode",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [],
    name: "FeeTransferFailed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientEscrowBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBitcoinAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidBitcoinAmount",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidFeeAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minConfirmations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dustThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct BTCEscrowFactory.BitcoinConfig",
        name: "config",
        type: "tuple",
      },
    ],
    name: "BitcoinConfigUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "CreationFeeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "Address",
        name: "taker",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "DstEscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "escrow",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "hashlock",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "Address",
        name: "maker",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "SrcEscrowCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldTreasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "ACCESS_TOKEN",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BTC_ESCROW_DST_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BTC_ESCROW_SRC_IMPLEMENTATION",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowDst",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "addressOfEscrowSrc",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bitcoinConfig",
    outputs: [
      {
        internalType: "uint256",
        name: "minConfirmations",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dustThreshold",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "createDstEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "createSrcEscrow",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "creationFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "minConfirmations",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dustThreshold",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxAmount",
            type: "uint256",
          },
        ],
        internalType: "struct BTCEscrowFactory.BitcoinConfig",
        name: "newConfig",
        type: "tuple",
      },
    ],
    name: "setBitcoinConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setCreationFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "setTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101206040523480156200001257600080fd5b506040516200353b3803806200353b83398101604081905262000035916200030b565b856001600160a01b0381166200006557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b62000070816200026c565b506001600160a01b03878116610100526001849055600280546001600160a01b031916918416919091179055805160035560208101516004556040808201516005555185908890620000c290620002bc565b63ffffffff90921682526001600160a01b03166020820152604001604051809103906000f080158015620000fa573d6000803e3d6000fd5b506001600160a01b0316608052604051849088906200011990620002ca565b63ffffffff90921682526001600160a01b03166020820152604001604051809103906000f08015801562000151573d6000803e3d6000fd5b506001600160a01b031660a052608051620001db90604080517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000060208083019190915260609390931b6001600160601b03191660348201526e5af43d82803e903d91602b57fd5bf360881b6048820152815160378183030181526057909101909152805191012090565b60c05260a0516200025b90604080517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000060208083019190915260609390931b6001600160601b03191660348201526e5af43d82803e903d91602b57fd5bf360881b6048820152815160378183030181526057909101909152805191012090565b60e05250620003fa95505050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111da806200115183390190565b611210806200232b83390190565b6001600160a01b0381168114620002ee57600080fd5b50565b805163ffffffff811681146200030657600080fd5b919050565b60008060008060008060008789036101208112156200032957600080fd5b88516200033681620002d8565b60208a01519098506200034981620002d8565b96506200035960408a01620002f1565b95506200036960608a01620002f1565b94506080890151935060a08901516200038281620002d8565b9250606060bf19820112156200039757600080fd5b50604051606081016001600160401b0381118282101715620003c957634e487b7160e01b600052604160045260246000fd5b806040525060c0890151815260e0890151602082015261010089015160408201528091505092959891949750929550565b60805160a05160c05160e05161010051610cef62000462600039600061012c01526000818161041e01526105650152600081816106000152818161077f01526108010152600081816101f901526108280152600081816101b0015261084e0152610cef6000f3fe6080604052600436106100f35760003560e01c806399184f131161008a578063dce0b4e411610059578063dce0b4e4146102c6578063f0f44260146102ea578063f2fde38b1461030a578063fb6bd47e1461032a57600080fd5b806399184f1314610239578063b7d8622514610273578063be58e91c14610293578063c3a28841146102b357600080fd5b8063695e52b3116100c6578063695e52b31461019e578063715018a6146101d257806381b6a051146101e75780638da5cb5b1461021b57600080fd5b80630d0eaa3a146100f85780633eb5002a1461011a5780634579d04b1461016b57806361d027b31461017e575b600080fd5b34801561010457600080fd5b50610118610113366004610b8d565b61034a565b005b34801561012657600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b610118610179366004610ba5565b6103b0565b34801561018a57600080fd5b5060025461014e906001600160a01b031681565b3480156101aa57600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156101de57600080fd5b506101186104d1565b3480156101f357600080fd5b5061014e7f000000000000000000000000000000000000000000000000000000000000000081565b34801561022757600080fd5b506000546001600160a01b031661014e565b34801561024557600080fd5b5060035460045460055461025892919083565b60408051938452602084019290925290820152606001610162565b34801561027f57600080fd5b5061011861028e366004610bb8565b6104e5565b34801561029f57600080fd5b5061014e6102ae366004610ba5565b610533565b6101186102c1366004610ba5565b610592565b3480156102d257600080fd5b506102dc60015481565b604051908152602001610162565b3480156102f657600080fd5b50610118610305366004610bd1565b6106a8565b34801561031657600080fd5b50610118610325366004610bd1565b61070a565b34801561033657600080fd5b5061014e610345366004610ba5565b61074d565b6103526107a4565b803560038190556020808301356004819055604080850135600581905581519485529284019190915282810191909152517fdf9be330c05a23c3ffa9d9d9df4d692d2e656d6a4c7e7d9c3f0ae710f507420e9181900360600190a150565b608081013560006001600160a01b038216156103d0578260c001356103e2565b6103e260c084013560a0850135610bfa565b90506000600154826103f49190610bfa565b9050803414610416576040516334f5151d60e01b815260040160405180910390fd5b6000610443857f0000000000000000000000000000000000000000000000000000000000000000856107d1565b90506001600160a01b0384161561046d5761046d6001600160a01b038516338360a08901356108f4565b610475610954565b604080516001600160a01b0383168152602080880135908201526060808801359282019290925233917f518f052b717cd6e4cf0abca59109d2531d264ce8e86d81e900110a4eacdee10691015b60405180910390a25050505050565b6104d96107a4565b6104e360006109eb565b565b6104ed6107a4565b600180549082905560408051828152602081018490527f5de302eeb1c80d4fb0c0953b692353f09ddf431411b8eb2034d5e8576956191291015b60405180910390a15050565b60008061054536849003840184610c1b565b905061055560e084013542610a3b565b60e0820152610100812061058a817f000000000000000000000000000000000000000000000000000000000000000030610a52565b949350505050565b608081013560006001600160a01b038216156105b2578260c001356105c4565b6105c460c084013560a0850135610bfa565b90506000600154826105d69190610bfa565b90508034146105f8576040516334f5151d60e01b815260040160405180910390fd5b6000610625857f0000000000000000000000000000000000000000000000000000000000000000856107d1565b90506001600160a01b0384161561064f5761064f6001600160a01b038516338360a08901356108f4565b610657610954565b604080516001600160a01b038316815260208088013590820152818701359181019190915233907f54a6401c7dbf5f93434419131a2b02390428924f99a62619b581ecc916e26147906060016104c2565b6106b06107a4565b600280546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f4ab5be82436d353e61ca18726e984e561f5c1cc7c6d38b29d2553c790434705a9101610527565b6107126107a4565b6001600160a01b03811661074157604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61074a816109eb565b50565b60008061075f36849003840184610c1b565b905061076f60e084013542610a3b565b60e0820152610100812061058a817f000000000000000000000000000000000000000000000000000000000000000030610a52565b6000546001600160a01b031633146104e35760405163118cdaa760e01b8152336004820152602401610738565b6000806107e336869003860186610c1b565b90506107f360e086013542610a3b565b60e0820152610100812060007f0000000000000000000000000000000000000000000000000000000000000000861461084c577f000000000000000000000000000000000000000000000000000000000000000061086e565b7f00000000000000000000000000000000000000000000000000000000000000005b6040516020016108cb9190733d602d80600a3d3981f3363d3d373d3d3d363d7360601b815260609190911b6bffffffffffffffffffffffff191660148201526e5af43d82803e903d91602b57fd5bf360881b602882015260370190565b60405160208183030381529060405290506108e7858383610a85565b93505050505b9392505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261094e908590610b1c565b50505050565b600060015411801561097057506002546001600160a01b031615155b156104e3576002546001546040516000926001600160a01b031691908381818185875af1925050503d80600081146109c4576040519150601f19603f3d011682016040523d82523d6000602084013e6109c9565b606091505b505090508061074a57604051634033e4e360e01b815260040160405180910390fd5b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160e01b03821660e082901b175b92915050565b6000604051836040820152846020820152828152600b8101905060ff8153605590206001600160a01b0316949350505050565b600083471015610ab15760405163cf47918160e01b815247600482015260248101859052604401610738565b8151600003610ad357604051631328927760e21b815260040160405180910390fd5b8282516020840186f590503d151981151615610af5576040513d6000823e3d81fd5b6001600160a01b0381166108ed5760405163b06ebf3d60e01b815260040160405180910390fd5b600080602060008451602086016000885af180610b3f576040513d6000823e3d81fd5b50506000513d91508115610b57578060011415610b64565b6001600160a01b0384163b155b1561094e57604051635274afe760e01b81526001600160a01b0385166004820152602401610738565b600060608284031215610b9f57600080fd5b50919050565b60006101008284031215610b9f57600080fd5b600060208284031215610bca57600080fd5b5035919050565b600060208284031215610be357600080fd5b81356001600160a01b03811681146108ed57600080fd5b80820180821115610a4c57634e487b7160e01b600052601160045260246000fd5b6000610100808385031215610c2f57600080fd5b6040519081019067ffffffffffffffff82118183101715610c6057634e487b7160e01b600052604160045260246000fd5b81604052833581526020840135602082015260408401356040820152606084013560608201526080840135608082015260a084013560a082015260c084013560c082015260e084013560e082015280925050509291505056fea26469706673582212207bf42f327b8d143c1cf82d83836e2637487067807eb4b2a9fa0ed3325bc6a5de64736f6c634300081700333360c0527f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000006101209081526001600160601b03193060601b16610134526e5af43d82803e903d91602b57fd5bf360881b610148526037610100819052610157604052902060e05234801561007257600080fd5b506040516111da3803806111da833981016040819052610091916100ad565b63ffffffff90911660a0526001600160a01b03166080526100fc565b600080604083850312156100c057600080fd5b825163ffffffff811681146100d457600080fd5b60208401519092506001600160a01b03811681146100f157600080fd5b809150509250929050565b60805160a05160c05160e05161109061014a600039600081816101a8015261095001526000818161015c015261097101526000818161028a01526105f90152600061030101526110906000f3fe6080604052600436106100c65760003560e01c806350317ab81161007f578063e823e09c11610059578063e823e09c14610258578063f56cd69c14610278578063f6a4e9a8146102ac578063f76f6aef146102cc57600080fd5b806350317ab8146101f857806390d3252f14610218578063d8715b551461023857600080fd5b80630af97558146100d25780631294dfc6146100f4578063233057031461012a5780632dd310001461014a57806334862b6a146101965780634649088b146101d857600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100f26100ed366004610ca8565b6102ec565b005b34801561010057600080fd5b5061011461010f366004610cd6565b61043e565b6040516101219190610d13565b60405180910390f35b34801561013657600080fd5b506100f2610145366004610ca8565b6104d8565b34801561015657600080fd5b5061017e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610121565b3480156101a257600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610121565b3480156101e457600080fd5b506100f26101f3366004610d46565b6105b7565b34801561020457600080fd5b50610114610213366004610cd6565b61068f565b34801561022457600080fd5b506100f2610233366004610d92565b6106a8565b34801561024457600080fd5b50610114610253366004610cd6565b610768565b34801561026457600080fd5b506100f2610273366004610db6565b61080a565b34801561028457600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b857600080fd5b506101146102c7366004610cd6565b61089c565b3480156102d857600080fd5b506100f26102e7366004610db6565b6108b9565b6040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103749190610e45565b600003610394576040516348f5c3ed60e01b815260040160405180910390fd5b8061039e8161093c565b828280602001356103ae836109c0565b146103cc5760405163abab6bd760e01b815260040160405180910390fd5b6103db60e08501356001610a37565b804210156103fc576040516337bf561360e11b815260040160405180910390fd5b61040b60e08601356002610a37565b80421061042b576040516337bf561360e11b815260040160405180910390fd5b6104358787610a79565b50505050505050565b6001602052600090815260409020805461045790610e5e565b80601f016020809104026020016040519081016040528092919081815260200182805461048390610e5e565b80156104d05780601f106104a5576101008083540402835291602001916104d0565b820191906000526020600020905b8154815290600101906020018083116104b357829003601f168201915b505050505081565b806104e28161093c565b828280602001356104f2836109c0565b146105105760405163abab6bd760e01b815260040160405180910390fd5b61051f60e08501356000610a37565b80421015610540576040516337bf561360e11b815260040160405180910390fd5b61054f60e08601356002610a37565b80421061056f576040516337bf561360e11b815260040160405180910390fd5b336001600160a01b03604088013516148015906105995750336001600160a01b0360608801351614155b1561042b576040516348f5c3ed60e01b815260040160405180910390fd5b80336001600160a01b03606083013516146105e5576040516348f5c3ed60e01b815260040160405180910390fd5b816105ef8161093c565b60e083810135901c7f0000000000000000000000000000000000000000000000000000000000000000018042101561063a576040516337bf561360e11b815260040160405180910390fd5b610645863387610ad9565b604080516001600160a01b0388168152602081018790527fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac910160405180910390a1505050505050565b6000602081905290815260409020805461045790610e5e565b80336001600160a01b03604083013516146106d6576040516348f5c3ed60e01b815260040160405180910390fd5b816106e08161093c565b6106ef60e08401356002610a37565b80421015610710576040516337bf561360e11b815260040160405180910390fd5b610727608085013560408601358660a00135610ad9565b61073960408501358560c00135610b0a565b6040517f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a990600090a150505050565b600081815260016020526040902080546060919061078590610e5e565b80601f01602080910402602001604051908101604052809291908181526020018280546107b190610e5e565b80156107fe5780601f106107d3576101008083540402835291602001916107fe565b820191906000526020600020905b8154815290600101906020018083116107e157829003601f168201915b50505050509050919050565b806108148161093c565b336001600160a01b0360608401351614610841576040516348f5c3ed60e01b815260040160405180910390fd5b600085815260016020526040902061085a848683610ef8565b50847f0df1e995c80dc6fe1ba1c5a3c839cb629629e8e1648aa9d145eb75057a707782858560405161088d929190610fb9565b60405180910390a25050505050565b600081815260208190526040902080546060919061078590610e5e565b806108c38161093c565b336001600160a01b03604084013516146108f0576040516348f5c3ed60e01b815260040160405180910390fd5b6000858152602081905260409020610909848683610ef8565b50847fbae433f142e4103c20d99dcb939b0dd6783fe12b0fef8b6ab81ef3f1f0bb68b7858560405161088d929190610fb9565b600061094782610b7e565b905030610995827f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610b94565b6001600160a01b0316146109bc57604051635134a42560e11b815260040160405180910390fd5b5050565b60006002826040516020016109d791815260200190565b60408051601f19818403018152908290526109f191610fe8565b602060405180830381855afa158015610a0e573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a319190610e45565b92915050565b60008281836002811115610a4d57610a4d611004565b610a58906020611030565b9050610a7063ffffffff83831c1660e084901c611047565b95945050505050565b610a90608082013560608301358360a00135610ad9565b610aa260408201358260c00135610b0a565b6040518281527fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171059060200160405180910390a15050565b6001600160a01b038316610af657610af18282610b0a565b505050565b610af16001600160a01b0384168383610bc7565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b57576040519150601f19603f3d011682016040523d82523d6000602084013e610b5c565b606091505b5050905080610af157604051638a0332d560e01b815260040160405180910390fd5b6000604051610100838237610100902092915050565b6000604051836040820152846020820152828152600b8101905060ff8153605590206001600160a01b0316949350505050565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b1781528251610af1938793909260009283929183919082885af180610c37576040513d6000823e3d81fd5b50506000513d91508115610c4f578060011415610c5c565b6001600160a01b0384163b155b15610c8957604051635274afe760e01b81526001600160a01b038516600482015260240160405180910390fd5b50505050565b60006101008284031215610ca257600080fd5b50919050565b6000806101208385031215610cbc57600080fd5b82359150610ccd8460208501610c8f565b90509250929050565b600060208284031215610ce857600080fd5b5035919050565b60005b83811015610d0a578181015183820152602001610cf2565b50506000910152565b6020815260008251806020840152610d32816040850160208701610cef565b601f01601f19169190910160400192915050565b60008060006101408486031215610d5c57600080fd5b83356001600160a01b0381168114610d7357600080fd5b925060208401359150610d898560408601610c8f565b90509250925092565b60006101008284031215610da557600080fd5b610daf8383610c8f565b9392505050565b6000806000806101408587031215610dcd57600080fd5b84359350602085013567ffffffffffffffff80821115610dec57600080fd5b818701915087601f830112610e0057600080fd5b813581811115610e0f57600080fd5b886020828501011115610e2157600080fd5b602083019550809450505050610e3a8660408701610c8f565b905092959194509250565b600060208284031215610e5757600080fd5b5051919050565b600181811c90821680610e7257607f821691505b602082108103610ca257634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115610af1576000816000526020600020601f850160051c81016020861015610ed15750805b601f850160051c820191505b81811015610ef057828155600101610edd565b505050505050565b67ffffffffffffffff831115610f1057610f10610e92565b610f2483610f1e8354610e5e565b83610ea8565b6000601f841160018114610f585760008515610f405750838201355b600019600387901b1c1916600186901b178355610fb2565b600083815260209020601f19861690835b82811015610f895786850135825560209485019460019092019101610f69565b5086821015610fa65760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008251610ffa818460208701610cef565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610a3157610a3161101a565b80820180821115610a3157610a3161101a56fea2646970667358221220bc4082ed5a66d2a0a6bc657dfe53c131d9f251d750ed62c71ac5349aace4720d64736f6c634300081700333360c0527f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000006101209081526001600160601b03193060601b16610134526e5af43d82803e903d91602b57fd5bf360881b610148526037610100819052610157604052902060e05234801561007257600080fd5b50604051611210380380611210833981016040819052610091916100ad565b63ffffffff90911660a0526001600160a01b03166080526100fc565b600080604083850312156100c057600080fd5b825163ffffffff811681146100d457600080fd5b60208401519092506001600160a01b03811681146100f157600080fd5b809150509250929050565b60805160a05160c05160e0516110c661014a600039600081816101a8015261098601526000818161015c01526109a701526000818161028a01526105f90152600061030101526110c66000f3fe6080604052600436106100c65760003560e01c806350317ab81161007f578063e823e09c11610059578063e823e09c14610258578063f56cd69c14610278578063f6a4e9a8146102ac578063f76f6aef146102cc57600080fd5b806350317ab8146101f857806390d3252f14610218578063d8715b551461023857600080fd5b80630af97558146100d25780631294dfc6146100f4578063233057031461012a5780632dd310001461014a57806334862b6a146101965780634649088b146101d857600080fd5b366100cd57005b600080fd5b3480156100de57600080fd5b506100f26100ed366004610cde565b6102ec565b005b34801561010057600080fd5b5061011461010f366004610d0c565b61043e565b6040516101219190610d49565b60405180910390f35b34801561013657600080fd5b506100f2610145366004610cde565b6104d8565b34801561015657600080fd5b5061017e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610121565b3480156101a257600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610121565b3480156101e457600080fd5b506100f26101f3366004610d7c565b6105b7565b34801561020457600080fd5b50610114610213366004610d0c565b61068f565b34801561022457600080fd5b506100f2610233366004610dc8565b6106a8565b34801561024457600080fd5b50610114610253366004610d0c565b610768565b34801561026457600080fd5b506100f2610273366004610dec565b61080a565b34801561028457600080fd5b506101ca7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102b857600080fd5b506101146102c7366004610d0c565b6108b7565b3480156102d857600080fd5b506100f26102e7366004610dec565b6108d4565b6040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610350573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103749190610e7b565b600003610394576040516348f5c3ed60e01b815260040160405180910390fd5b8061039e81610972565b828280602001356103ae836109f6565b146103cc5760405163abab6bd760e01b815260040160405180910390fd5b6103db60e08501356001610a6d565b804210156103fc576040516337bf561360e11b815260040160405180910390fd5b61040b60e08601356002610a6d565b80421061042b576040516337bf561360e11b815260040160405180910390fd5b6104358787610aaf565b50505050505050565b6000602081905290815260409020805461045790610e94565b80601f016020809104026020016040519081016040528092919081815260200182805461048390610e94565b80156104d05780601f106104a5576101008083540402835291602001916104d0565b820191906000526020600020905b8154815290600101906020018083116104b357829003601f168201915b505050505081565b806104e281610972565b828280602001356104f2836109f6565b146105105760405163abab6bd760e01b815260040160405180910390fd5b61051f60e08501356000610a6d565b80421015610540576040516337bf561360e11b815260040160405180910390fd5b61054f60e08601356002610a6d565b80421061056f576040516337bf561360e11b815260040160405180910390fd5b336001600160a01b03604088013516148015906105995750336001600160a01b0360608801351614155b1561042b576040516348f5c3ed60e01b815260040160405180910390fd5b80336001600160a01b03606083013516146105e5576040516348f5c3ed60e01b815260040160405180910390fd5b816105ef81610972565b60e083810135901c7f0000000000000000000000000000000000000000000000000000000000000000018042101561063a576040516337bf561360e11b815260040160405180910390fd5b610645863387610b0f565b604080516001600160a01b0388168152602081018790527fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac910160405180910390a1505050505050565b6001602052600090815260409020805461045790610e94565b80336001600160a01b03606083013516146106d6576040516348f5c3ed60e01b815260040160405180910390fd5b816106e081610972565b6106ef60e08401356002610a6d565b80421015610710576040516337bf561360e11b815260040160405180910390fd5b610727608085013560608601358660a00135610b0f565b61073960608501358560c00135610b40565b6040517f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a990600090a150505050565b600081815260208190526040902080546060919061078590610e94565b80601f01602080910402602001604051908101604052809291908181526020018280546107b190610e94565b80156107fe5780601f106107d3576101008083540402835291602001916107fe565b820191906000526020600020905b8154815290600101906020018083116107e157829003601f168201915b50505050509050919050565b8061081481610972565b336001600160a01b036040840135161480159061083e5750336001600160a01b0360608401351614155b1561085c576040516348f5c3ed60e01b815260040160405180910390fd5b6000858152602081905260409020610875848683610f2e565b50847f0df1e995c80dc6fe1ba1c5a3c839cb629629e8e1648aa9d145eb75057a70778285856040516108a8929190610fef565b60405180910390a25050505050565b600081815260016020526040902080546060919061078590610e94565b806108de81610972565b336001600160a01b03604084013516148015906109085750336001600160a01b0360608401351614155b15610926576040516348f5c3ed60e01b815260040160405180910390fd5b600085815260016020526040902061093f848683610f2e565b50847fbae433f142e4103c20d99dcb939b0dd6783fe12b0fef8b6ab81ef3f1f0bb68b785856040516108a8929190610fef565b600061097d82610bb4565b9050306109cb827f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610bca565b6001600160a01b0316146109f257604051635134a42560e11b815260040160405180910390fd5b5050565b6000600282604051602001610a0d91815260200190565b60408051601f1981840301815290829052610a279161101e565b602060405180830381855afa158015610a44573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190610a679190610e7b565b92915050565b60008281836002811115610a8357610a8361103a565b610a8e906020611066565b9050610aa663ffffffff83831c1660e084901c61107d565b95945050505050565b610ac6608082013560408301358360a00135610b0f565b610ad860608201358260c00135610b40565b6040518281527fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171059060200160405180910390a15050565b6001600160a01b038316610b2c57610b278282610b40565b505050565b610b276001600160a01b0384168383610bfd565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114610b8d576040519150601f19603f3d011682016040523d82523d6000602084013e610b92565b606091505b5050905080610b2757604051638a0332d560e01b815260040160405180910390fd5b6000604051610100838237610100902092915050565b6000604051836040820152846020820152828152600b8101905060ff8153605590206001600160a01b0316949350505050565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b1781528251610b27938793909260009283929183919082885af180610c6d576040513d6000823e3d81fd5b50506000513d91508115610c85578060011415610c92565b6001600160a01b0384163b155b15610cbf57604051635274afe760e01b81526001600160a01b038516600482015260240160405180910390fd5b50505050565b60006101008284031215610cd857600080fd5b50919050565b6000806101208385031215610cf257600080fd5b82359150610d038460208501610cc5565b90509250929050565b600060208284031215610d1e57600080fd5b5035919050565b60005b83811015610d40578181015183820152602001610d28565b50506000910152565b6020815260008251806020840152610d68816040850160208701610d25565b601f01601f19169190910160400192915050565b60008060006101408486031215610d9257600080fd5b83356001600160a01b0381168114610da957600080fd5b925060208401359150610dbf8560408601610cc5565b90509250925092565b60006101008284031215610ddb57600080fd5b610de58383610cc5565b9392505050565b6000806000806101408587031215610e0357600080fd5b84359350602085013567ffffffffffffffff80821115610e2257600080fd5b818701915087601f830112610e3657600080fd5b813581811115610e4557600080fd5b886020828501011115610e5757600080fd5b602083019550809450505050610e708660408701610cc5565b905092959194509250565b600060208284031215610e8d57600080fd5b5051919050565b600181811c90821680610ea857607f821691505b602082108103610cd857634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b601f821115610b27576000816000526020600020601f850160051c81016020861015610f075750805b601f850160051c820191505b81811015610f2657828155600101610f13565b505050505050565b67ffffffffffffffff831115610f4657610f46610ec8565b610f5a83610f548354610e94565b83610ede565b6000601f841160018114610f8e5760008515610f765750838201355b600019600387901b1c1916600186901b178355610fe8565b600083815260209020601f19861690835b82811015610fbf5786850135825560209485019460019092019101610f9f565b5086821015610fdc5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008251611030818460208701610d25565b9190910192915050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b8082028115828204841417610a6757610a67611050565b80820180821115610a6757610a6761105056fea26469706673582212207175fa5507b595dc5183a894291119eb85fb6362b7939b3f237c815289cb5b8264736f6c63430008170033";

type BTCEscrowFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BTCEscrowFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BTCEscrowFactory__factory extends ContractFactory {
  constructor(...args: BTCEscrowFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    _creationFee: BigNumberish,
    _treasury: AddressLike,
    _bitcoinConfig: BTCEscrowFactory.BitcoinConfigStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      accessToken,
      owner,
      rescueDelaySrc,
      rescueDelayDst,
      _creationFee,
      _treasury,
      _bitcoinConfig,
      overrides || {}
    );
  }
  override deploy(
    accessToken: AddressLike,
    owner: AddressLike,
    rescueDelaySrc: BigNumberish,
    rescueDelayDst: BigNumberish,
    _creationFee: BigNumberish,
    _treasury: AddressLike,
    _bitcoinConfig: BTCEscrowFactory.BitcoinConfigStruct,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      accessToken,
      owner,
      rescueDelaySrc,
      rescueDelayDst,
      _creationFee,
      _treasury,
      _bitcoinConfig,
      overrides || {}
    ) as Promise<
      BTCEscrowFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BTCEscrowFactory__factory {
    return super.connect(runner) as BTCEscrowFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BTCEscrowFactoryInterface {
    return new Interface(_abi) as BTCEscrowFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BTCEscrowFactory {
    return new Contract(address, _abi, runner) as unknown as BTCEscrowFactory;
  }
}
