/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  EscrowDst,
  EscrowDstInterface,
} from "../../../monadvm/contracts/EscrowDst";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "rescueDelay",
        type: "uint32",
      },
      {
        internalType: "contract IERC20",
        name: "accessToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidImmutables",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSecret",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidTime",
    type: "error",
  },
  {
    inputs: [],
    name: "NativeTokenSendingFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EscrowCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
    ],
    name: "EscrowWithdrawal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsRescued",
    type: "event",
  },
  {
    inputs: [],
    name: "FACTORY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROXY_BYTECODE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "RESCUE_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "cancel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "publicWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "secret",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bytes32",
            name: "orderHash",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "hashlock",
            type: "bytes32",
          },
          {
            internalType: "Address",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "taker",
            type: "uint256",
          },
          {
            internalType: "Address",
            name: "token",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "safetyDeposit",
            type: "uint256",
          },
          {
            internalType: "Timelocks",
            name: "timelocks",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseEscrow.Immutables",
        name: "immutables",
        type: "tuple",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x3360c0527f3d602d80600a3d3981f3363d3d373d3d3d363d730000000000000000000000006101209081526001600160601b03193060601b16610134526e5af43d82803e903d91602b57fd5bf360881b610148526037610100819052610157604052902060e05234801561007257600080fd5b50604051610b62380380610b62833981016040819052610091916100ad565b63ffffffff90911660a0526001600160a01b03166080526100fc565b600080604083850312156100c057600080fd5b825163ffffffff811681146100d457600080fd5b60208401519092506001600160a01b03811681146100f157600080fd5b809150509250929050565b60805160a05160c05160e051610a196101496000396000818161012501526105fd01526000818160d4015261061e0152600081816101a701526103c0015260006101de0152610a196000f3fe6080604052600436106100745760003560e01c806334862b6a1161004e57806334862b6a146101135780634649088b1461015557806390d3252f14610175578063f56cd69c1461019557600080fd5b80630af975581461008057806323305703146100a25780632dd31000146100c257600080fd5b3661007b57005b600080fd5b34801561008c57600080fd5b506100a061009b3660046108a7565b6101c9565b005b3480156100ae57600080fd5b506100a06100bd3660046108a7565b6102e0565b3480156100ce57600080fd5b506100f67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561011f57600080fd5b506101477f000000000000000000000000000000000000000000000000000000000000000081565b60405190815260200161010a565b34801561016157600080fd5b506100a06101703660046108d5565b61037e565b34801561018157600080fd5b506100a0610190366004610921565b610456565b3480156101a157600080fd5b506101477f000000000000000000000000000000000000000000000000000000000000000081565b6040516370a0823160e01b81523360048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561022d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102519190610945565b600003610271576040516348f5c3ed60e01b815260040160405180910390fd5b61028060e08201356001610513565b804210156102a1576040516337bf561360e11b815260040160405180910390fd5b6102b060e08301356002610513565b8042106102d0576040516337bf561360e11b815260040160405180910390fd5b6102da8484610557565b50505050565b80336001600160a01b036060830135161461030e576040516348f5c3ed60e01b815260040160405180910390fd5b61031d60e08301356000610513565b8042101561033e576040516337bf561360e11b815260040160405180910390fd5b61034d60e08401356002610513565b80421061036d576040516337bf561360e11b815260040160405180910390fd5b6103778585610557565b5050505050565b80336001600160a01b03606083013516146103ac576040516348f5c3ed60e01b815260040160405180910390fd5b816103b6816105e9565b60e083810135901c7f00000000000000000000000000000000000000000000000000000000000000000180421015610401576040516337bf561360e11b815260040160405180910390fd5b61040c86338761066d565b604080516001600160a01b0388168152602081018790527fc4474c2790e13695f6d2b6f1d8e164290b55370f87a542fd7711abe0a1bf40ac910160405180910390a1505050505050565b80336001600160a01b0360608301351614610484576040516348f5c3ed60e01b815260040160405180910390fd5b8161048e816105e9565b61049d60e08401356002610513565b804210156104be576040516337bf561360e11b815260040160405180910390fd5b6104d6608085013560608601355b8660a0013561066d565b6104e4338560c0013561069e565b6040517f6e3be9294e58d10b9c8053cfd5e09871b67e442fe394d6b0870d336b9df984a990600090a150505050565b600082818360028111156105295761052961095e565b61053490602061098a565b905061054c63ffffffff83831c1660e084901c6109a1565b925050505b92915050565b80610561816105e9565b8282806020013561057183610712565b1461058f5760405163abab6bd760e01b815260040160405180910390fd5b6105a1608085013560408601356104cc565b6105af338560c0013561069e565b6040518581527fe346f5c97a360db5188bfa5d3ec5f0583abde420c6ba4d08b6cfe61addc171059060200160405180910390a15050505050565b60006105f482610783565b905030610642827f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000610799565b6001600160a01b03161461066957604051635134a42560e11b815260040160405180910390fd5b5050565b6001600160a01b03831661068a57610685828261069e565b505050565b6106856001600160a01b03841683836107cc565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146106eb576040519150601f19603f3d011682016040523d82523d6000602084013e6106f0565b606091505b505090508061068557604051638a0332d560e01b815260040160405180910390fd5b600060028260405160200161072991815260200190565b60408051601f1981840301815290829052610743916109b4565b602060405180830381855afa158015610760573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906105519190610945565b6000604051610100838237610100902092915050565b6000604051836040820152846020820152828152600b8101905060ff8153605590206001600160a01b0316949350505050565b604080516001600160a01b03841660248201526044808201849052825180830390910181526064909101909152602080820180516001600160e01b031663a9059cbb60e01b1781528251610685938793909260009283929183919082885af18061083c576040513d6000823e3d81fd5b50506000513d91508115610854578060011415610861565b6001600160a01b0384163b155b156102da57604051635274afe760e01b81526001600160a01b038516600482015260240160405180910390fd5b600061010082840312156108a157600080fd5b50919050565b60008061012083850312156108bb57600080fd5b823591506108cc846020850161088e565b90509250929050565b600080600061014084860312156108eb57600080fd5b83356001600160a01b038116811461090257600080fd5b925060208401359150610918856040860161088e565b90509250925092565b6000610100828403121561093457600080fd5b61093e838361088e565b9392505050565b60006020828403121561095757600080fd5b5051919050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761055157610551610974565b8082018082111561055157610551610974565b6000825160005b818110156109d557602081860181015185830152016109bb565b50600092019182525091905056fea26469706673582212200183a8e53cc20b9a6e53037e5d29ea0d173c0b8298ec3a5b8773bfa74a552ff264736f6c63430008170033";

type EscrowDstConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowDstConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EscrowDst__factory extends ContractFactory {
  constructor(...args: EscrowDstConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      rescueDelay,
      accessToken,
      overrides || {}
    );
  }
  override deploy(
    rescueDelay: BigNumberish,
    accessToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(rescueDelay, accessToken, overrides || {}) as Promise<
      EscrowDst & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EscrowDst__factory {
    return super.connect(runner) as EscrowDst__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowDstInterface {
    return new Interface(_abi) as EscrowDstInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): EscrowDst {
    return new Contract(address, _abi, runner) as unknown as EscrowDst;
  }
}
